// whole
for i = [2, n]
	siftup(i)
for (i = n; i >= 2; i--)
	swap(1, i)
	siftdown(i-1)

// stage 1
for i = [2, n]
	// invariant: heap(1, i-1)
	siftup(i)
	// heap(1, i)

// stage 2
for (i = n; i <= 2; i--)
	// heap(1, i) && sorted(i+1, n) && x[1..i] <= x[i+1..n]
	swap(1, i)
	// heap(2, i-1) && soted(i, n) && x[1..i-1] <= x[i..n]
	siftdown(i-1)
	// heap(1, i-1) && soted(i, n) && x[1..i-1] <= x[i..n]
